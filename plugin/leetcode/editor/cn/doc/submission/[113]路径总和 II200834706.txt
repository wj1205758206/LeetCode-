/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> path = new ArrayList<>();

        public List<List<Integer>> pathSum(TreeNode root, int targetSum) {


            if (root == null)
                return result;

            DFS(root, targetSum);

            return result;
        }

        private void DFS(TreeNode root, int targetSum) {
            
            path.add(root.val);

            targetSum -= root.val;
            if (root.left == null && root.right == null && targetSum == 0) {
 
                result.add(new ArrayList<>(path));
            }
            if (root.left != null)
                DFS(root.left, targetSum);
            if (root.right != null)
                DFS(root.right, targetSum);

            
            path.remove(path.size() - 1);

        }
}
//runtime:1 ms
//memory:38.6 MB
