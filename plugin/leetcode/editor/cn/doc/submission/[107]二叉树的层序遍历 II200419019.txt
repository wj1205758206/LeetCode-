/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
        public List<List<Integer>> levelOrderBottom(TreeNode root) {
            List<List<Integer>> result = new ArrayList<>();

            if (root == null)
                return result;

            DFS(root, 0, result);

            return result;
        }

        private void DFS(TreeNode node, int level, List<List<Integer>> result) {
            if (level == result.size()) {
                result.add(0, new ArrayList<>());
            }

            result.get(result.size() - level - 1).add(node.val);

            if (node.left != null)
                DFS(node.left, level + 1, result);
            if (node.right != null)
                DFS(node.right, level + 1, result);
        }
}
//runtime:1 ms
//memory:38.4 MB
