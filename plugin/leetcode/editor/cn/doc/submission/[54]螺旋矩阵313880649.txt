class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> result = new ArrayList<>();
        if(matrix.length == 0) return result;
        int rows = matrix.length;
        int cols = matrix[0].length;
        int top = 0, bottom = rows - 1, left = 0, right = cols - 1;
        while(true){
            for(int i = left; i <= right; i++){
                result.add(matrix[top][i]);
            }
            if(++top > bottom) break;

            for(int i = top; i <= bottom; i++){
                result.add(matrix[i][right]);
            }
            if(--right < left) break;

            for(int i = right; i >= left; i--){
                result.add(matrix[bottom][i]);
            }
            if(--bottom < top) break;

            for(int i = bottom; i >= top; i--){
                result.add(matrix[i][left]);
            }
            if(++left > right) break;
        }
        return result;
    }
}
//runtime:0 ms
//memory:39.4 MB
